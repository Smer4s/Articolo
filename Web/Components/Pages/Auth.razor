@page "/auth"

@using Web.Models.Commands
@using Web.Services.Abstractions
@rendermode InteractiveServer

@inject IMediator mediator
@inject ICookie cookie
@inject NavigationManager NavigationManager


<PageTitle>Вход</PageTitle>

<div class="auth-container">
    <div class="auth-box">
        <h1 class="element">Вход</h1>

        <div class="element">
            <label>Логин</label>
            <input class="auth-input" type="text" @bind-value="loginCommand.Login" />
        </div>

        <div class="element">
            <label>Пароль</label>
            <input class="auth-input" type="password" @bind-value="loginCommand.Password" />
        </div>

        <div class="element">
        <button class="auth-btn" @onclick="ClickAuthButton">Войти</button>
        <label style="color:red">@failureMessage</label>
        </div>

        <div class="text-black">
            Первый раз у нас?
            <a href="/reg">Регистрация</a>
        </div>
    </div>
</div>

@code {
    LoginCommand loginCommand = new();
    string failureMessage = "";

    async Task ClickAuthButton()
    {
        var token = await mediator.Send(loginCommand);

        if (token is not null)
        {
            failureMessage = "";
            await cookie.SetValue("accessToken", token.AccessToken);
            await cookie.SetValue("refreshToken", token.RefreshToken);
            NavigationManager.NavigateTo("/feed");
        }
        else
        {
            failureMessage = "Неверный логин или пароль";
        }
    }
}